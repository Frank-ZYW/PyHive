{"version":3,"sources":["webpack:///./src/views/spider/Monitor.vue?d5a3","webpack:///src/views/spider/Monitor.vue","webpack:///./src/views/spider/Monitor.vue?e715","webpack:///./src/views/spider/Monitor.vue","webpack:///./src/components/PanelTitle.vue?a325","webpack:///src/components/PanelTitle.vue","webpack:///./src/components/PanelTitle.vue?1762","webpack:///./src/components/PanelTitle.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","logDialog","on","$event","$lang","objects","log","directives","name","rawName","value","expression","staticStyle","_v","_s","logs","logLoadingActive","slot","buttons","return","task","columns","spider","spiderInfo","normal","error","project","project_name","lastTime","latest_run","intervals","next_run_duration","nextTime","calculatePercent","jobs","_l","job","index","key","start_time","substring","jobStatusClass","status","style","minWidth","jobID","id","_e","endTime","end_time","includes","jobStatusText","onGetLog","viewLog","messages","noData","titles","thirtyDayOperation","getMonitor","refresh","monitorLoading","monitor","chartSettings","staticRenderFns","component","domProps","title","_t"],"mappings":"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","file":"static/js/chunk-55d4e8a2.3b6e22e5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"task-status\"}},[_c('el-dialog',{staticClass:\"dialog\",attrs:{\"visible\":_vm.logDialog,\"size\":\"tiny\",\"width\":\"1050px\"},on:{\"update:visible\":function($event){_vm.logDialog=$event}}},[_c('div',{staticClass:\"panel\"},[_c('panel-title',{attrs:{\"title\":_vm.$lang.objects.log}}),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.logLoading),expression:\"logLoading\"}],staticClass:\"panel-body\",staticStyle:{\"height\":\"400px\",\"overflow\":\"auto\"}},[_c('pre',[_vm._v(_vm._s(_vm.logs[_vm.logLoadingActive]))])])],1),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){_vm.logDialog=false}}},[_c('i',{staticClass:\"fa fa-reply\"}),_vm._v(\"\\n                \"+_vm._s(_vm.$lang.buttons.return)+\"\\n            \")])],1)]),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"panel\"},[_c('panel-title',{attrs:{\"title\":_vm.$lang.objects.task}}),_c('div',{staticClass:\"panel-body\",staticStyle:{\"height\":\"260px\"}},[_c('el-form',{attrs:{\"label-width\":\"110px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.$lang.columns.spider}},[[_vm._v(\"\\n                                \"+_vm._s(_vm.spiderInfo.name)+\"\\n                                \"),(_vm.spiderInfo.available)?_c('el-badge',{staticClass:\"mark\",staticStyle:{\"margin-left\":\"3px\"},attrs:{\"type\":\"success\",\"value\":_vm.$lang.buttons.normal}}):_c('el-badge',{staticClass:\"mark\",staticStyle:{\"margin-left\":\"3px\"},attrs:{\"type\":\"danger\",\"value\":_vm.$lang.buttons.error}})]],2),_c('el-form-item',{attrs:{\"label\":_vm.$lang.columns.project}},[_vm._v(_vm._s(_vm.spiderInfo.project_name))]),_c('el-form-item',{attrs:{\"label\":_vm.$lang.columns.lastTime}},[_vm._v(_vm._s(_vm.spiderInfo.latest_run))]),_c('el-form-item',{attrs:{\"label\":_vm.$lang.columns.intervals}},[_vm._v(_vm._s(_vm.spiderInfo.next_run_duration))]),_c('el-form-item',{attrs:{\"label\":_vm.$lang.columns.nextTime}},[_c('el-progress',{staticStyle:{\"margin-top\":\"13px\"},attrs:{\"percentage\":_vm.calculatePercent(_vm.spiderInfo.latest_run, _vm.spiderInfo.next_run_duration),\"color\":\"#35CBAA\"}})],1)],1)],1)],1)]),_c('el-col',{attrs:{\"span\":18}},[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticClass:\"panel\"},[_c('panel-title',{attrs:{\"title\":_vm.$lang.objects.logs}}),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"panel-body\"},[_c('div',{staticClass:\"infinite-list-wrapper\",staticStyle:{\"height\":\"260px\",\"overflow\":\"auto\"}},[(_vm.jobs.length)?_c('el-timeline',_vm._l((_vm.jobs),function(job,index){return _c('el-timeline-item',{key:index,attrs:{\"timestamp\":job.start_time.substring(0,19),\"placement\":\"top\",\"type\":_vm.jobStatusClass[job.status]}},[(job.spider)?_c('span',{staticClass:\"m-l-md\",style:({minWidth: '290px'})},[_c('i',{staticClass:\"fa fa-key\"}),_vm._v(\"\\n                                            \"+_vm._s(_vm.$lang.columns.jobID)+\" : \"+_vm._s(job.id)+\"\\n                                        \")]):_vm._e(),(job.end_time)?_c('span',{staticClass:\"m-l-md\",style:({minWidth: '190px'})},[_c('i',{staticClass:\"el-icon-time\"}),_vm._v(\"\\n                                            \"+_vm._s(_vm.$lang.columns.endTime)+\" : \"+_vm._s(job.end_time.substring(0, 19))+\"\\n                                        \")]):_vm._e(),_c('span',{staticClass:\"m-l-md\"},[_c('el-button',{attrs:{\"type\":_vm.jobStatusClass[job.status],\"size\":\"mini\"}},[(['pending'].includes(job.status))?_c('i',{staticClass:\"fa fa-circle-thin\"}):_vm._e(),(['running'].includes(job.status))?_c('i',{staticClass:\"fa fa-spin fa-spinner\"}):_vm._e(),(['finished'].includes(job.status))?_c('i',{staticClass:\"fa fa-check\"}):_vm._e(),_vm._v(\"\\n                                                \"+_vm._s(_vm.jobStatusText[job.status])+\"\\n                                            \")])],1),_c('span',{staticClass:\"m-l-md\"},[_c('el-button',{staticClass:\"pull-right m-r-md\",attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.onGetLog(job.id)}}},[_c('a',{staticStyle:{\"text-decoration\":\"underline\"}},[_vm._v(_vm._s(_vm.$lang.buttons.viewLog))])])],1)])}),1):_c('el-table',{staticStyle:{\"height\":\"260px\",\"overflow\":\"auto\"},attrs:{\"data\":null,\"empty-text\":_vm.$lang.messages.noData}})],1)])],1)])],1)],1)],1),_c('div',{staticClass:\"panel\"},[_c('panel-title',{attrs:{\"title\":_vm.$lang.titles.thirtyDayOperation}},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.getMonitor}},[_c('i',{staticClass:\"fa fa-refresh\"}),_vm._v(\"\\n                \"+_vm._s(_vm.$lang.buttons.refresh)+\"\\n            \")])],1),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.monitorLoading),expression:\"!monitorLoading\"}],staticClass:\"panel-body\"},[(_vm.monitorLoading)?_c('div',[_c('ve-histogram',{attrs:{\"data\":_vm.monitor,\"settings\":_vm.chartSettings}})],1):_vm._e()])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div id=\"task-status\">\n        <el-dialog :visible.sync=\"logDialog\" size=\"tiny\" width=\"1050px\" class=\"dialog\">\n            <div class=\"panel\">\n                <panel-title :title=\"$lang.objects.log\"/>\n                <div class=\"panel-body\" v-loading=\"logLoading\" style=\"height:400px;overflow:auto\">\n                    <pre>{{ logs[logLoadingActive] }}</pre>\n                </div>\n            </div>\n            <div slot=\"footer\">\n                <el-button type=\"primary\" @click=\"logDialog=false\" size=\"small\">\n                    <i class=\"fa fa-reply\"></i>\n                    {{ $lang.buttons.return }}\n                </el-button>\n            </div>\n        </el-dialog>\n\n        <el-row :gutter=\"20\">\n            <el-col :span=\"6\">\n                <div class=\"panel\">\n                    <panel-title :title=\"$lang.objects.task\"></panel-title>\n                    <div class=\"panel-body\" style=\"height:260px\">\n                        <el-form label-width=\"110px\">\n                            <el-form-item :label=\"$lang.columns.spider\">\n                                <template>\n                                    {{ spiderInfo.name }}\n                                    <el-badge v-if=\"spiderInfo.available\" class=\"mark\" type=\"success\" :value=\"$lang.buttons.normal\" style=\"margin-left:3px\"/>\n                                    <el-badge v-else class=\"mark\" type=\"danger\" :value=\"$lang.buttons.error\" style=\"margin-left:3px\"/>\n                                </template>\n                            </el-form-item>\n                            <el-form-item :label=\"$lang.columns.project\">{{ spiderInfo.project_name }}</el-form-item>\n                            <el-form-item :label=\"$lang.columns.lastTime\">{{ spiderInfo.latest_run }}</el-form-item>\n                            <el-form-item :label=\"$lang.columns.intervals\">{{ spiderInfo.next_run_duration }}</el-form-item>\n                            <el-form-item :label=\"$lang.columns.nextTime\">\n                                <el-progress :percentage=\"calculatePercent(spiderInfo.latest_run, spiderInfo.next_run_duration)\"\n                                             color=\"#35CBAA\" style=\"margin-top: 13px\">\n                                </el-progress>\n                            </el-form-item>\n                        </el-form>\n                    </div>\n                </div>\n            </el-col>\n            <el-col :span=\"18\">\n                <el-row>\n                    <el-col :span=\"24\">\n                        <div class=\"panel\">\n                            <panel-title :title=\"$lang.objects.logs\"/>\n                            <div class=\"panel-body\" v-loading=\"loading\">\n                                <div class=\"infinite-list-wrapper\" style=\"height:260px;overflow:auto\">\n                                    <el-timeline v-if=\"jobs.length\">\n                                        <el-timeline-item v-for=\"(job, index) in jobs\" :key=\"index\"\n                                                          :timestamp=\"job.start_time.substring(0,19)\"\n                                                          placement=\"top\" :type=\"jobStatusClass[job.status]\">\n                                            <span v-if=\"job.spider\" class=\"m-l-md\" :style=\"{minWidth: '290px'}\">\n                                                <i class=\"fa fa-key\"></i>\n                                                {{ $lang.columns.jobID }} : {{ job.id }}\n                                            </span>\n                                            <span v-if=\"job.end_time\" class=\"m-l-md\" :style=\"{minWidth: '190px'}\">\n                                                <i class=\"el-icon-time\"></i>\n                                                {{ $lang.columns.endTime }} : {{ job.end_time.substring(0, 19) }}\n                                            </span>\n                                            <span class=\"m-l-md\">\n                                                <el-button :type=\"jobStatusClass[job.status]\" size=\"mini\">\n                                                    <i v-if=\"['pending'].includes(job.status)\" class=\"fa fa-circle-thin\"></i>\n                                                    <i v-if=\"['running'].includes(job.status)\" class=\"fa fa-spin fa-spinner\"></i>\n                                                    <i v-if=\"['finished'].includes(job.status)\" class=\"fa fa-check\"></i>\n                                                    {{ jobStatusText[job.status] }}\n                                                </el-button>\n                                            </span>\n                                            <span class=\"m-l-md\">\n                                                <el-button type=\"text\" size=\"mini\" class=\"pull-right m-r-md\" @click=\"onGetLog(job.id)\">\n                                                    <a style=\"text-decoration: underline\">{{ $lang.buttons.viewLog }}</a>\n                                                </el-button>\n                                            </span>\n                                        </el-timeline-item>\n                                    </el-timeline>\n                                    <el-table v-else :data=\"null\" :empty-text=\"$lang.messages.noData\" style=\"height:260px;overflow:auto\"></el-table>\n                                </div>\n                            </div>\n                        </div>\n                    </el-col>\n                </el-row>\n            </el-col>\n        </el-row>\n        <div class=\"panel\">\n            <panel-title :title=\"$lang.titles.thirtyDayOperation\">\n                <el-button @click=\"getMonitor\" size=\"mini\">\n                    <i class=\"fa fa-refresh\"></i>\n                    {{ $lang.buttons.refresh }}\n                </el-button>\n            </panel-title>\n            <div class=\"panel-body\" v-loading=\"!monitorLoading\">\n                <div v-if=\"monitorLoading\"><ve-histogram :data=\"monitor\" :settings=\"chartSettings\"></ve-histogram></div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import PanelTitle from '../../components/PanelTitle'\n\n    export default {\n        name: \"SpiderMonitor\",\n        data() {\n            return {\n                errorCount: 0,\n                loading: null,\n                jobs: {},\n                jobStatusClass: {\n                    finished: 'info',\n                    running: 'success',\n                    pending: 'warning'\n                },\n                jobStatusText: {\n                    finished: this.$store.getters.$lang.buttons.finished,\n                    running: this.$store.getters.$lang.buttons.running,\n                    pending: this.$store.getters.$lang.buttons.pending\n                },\n                logs: {},\n                logLoading: null,\n                // tag of timing-refresh log\n                logLoadingInterval: null,\n                // tag of loading log\n                logLoadingActive: null,\n                logDialog: false,\n                // v-charts config & data\n                chartSettings: {},\n                monitorLoading: false,\n                monitor: {}, // 30-day running record\n                // spider info\n                spiderInfo: this.$route.params.spiderInfo,\n            }\n        },\n        components: {\n            PanelTitle\n        },\n        created() {\n            this.monitor.columns = ['run_date', 'page_ignore', 'run_times',\n                'page_error', 'item_scrape', 'item_error'];\n            this.chartSettings = {\n                dimension: ['run_date'],\n                showLine: ['run_times'],\n                axisSite: {right: ['run_times']},\n                scale: [true, true],\n                stack: {'record': ['page_ignore', 'page_error', 'item_scrape', 'item_error']},\n                max: ['dataMax', 5],\n                labelMap: {\n                    'run_date': this.$lang.charts.runDate,\n                    'page_ignore': this.$lang.charts.pageIgnore,\n                    'page_error': this.$lang.charts.pageError,\n                    'item_scrape': this.$lang.charts.itemScrape,\n                    'item_error': this.$lang.charts.itemError,\n                    'run_times': this.$lang.charts.runTimes\n                }\n            };\n            this.getJobs();\n            this.getMonitor();\n            this.$store.commit(\n                'addInterval',\n                setInterval(() => {\n                    this.getJobs()\n                }, 5000)\n            )\n        },\n        methods: {\n            getJobs() {\n                this.loading = true;\n                this.errorCount = 0;\n                this.$http.get(this.formatString(this.$store.state.url.spider.listJobs, {\n                    id: this.spiderInfo.id\n                })).then(({data: data}) => {\n                    this.jobs = data;\n                    this.loading = false;\n                }).catch(() => {\n                    this.loading = false;\n                    this.errorCount += 1;\n                    if (this.errorCount >= 3) {\n                        this.$message.error(this.$store.getters.$lang.messages.errorLoad)\n                    } else {\n                        this.$store.commit(\n                            'setTimeout',\n                            setTimeout(() => {\n                                this.getJobs()\n                            }, 3000)\n                        )\n                    }\n                })\n            },\n            getLog(job) {\n                // log open\n                if (job) {\n                    this.logLoading = true;\n                    this.logLoadingActive = job;\n                    this.$http.get(this.formatString(this.$store.state.url.spider.getLog, {\n                        id: this.spiderInfo.id,\n                        job: this.logLoadingActive\n                    })).then(({data: data}) => {\n                        this.$set(this.logs, this.logLoadingActive, data);\n                        this.logLoading = false;\n                        this.$store.commit(\n                            'setTimeout',\n                            setTimeout(() => {\n                                this.getLog(job)\n                            }, 2000)\n                        )\n                    }).catch(() => {\n                        this.logLoading = false\n                    })\n                } else {\n                    this.$store.commit('clearTimeout')\n                }\n            },\n            onGetLog(id) {\n                this.logDialog = true;\n                this.getLog(id);\n            },\n            getMonitor() {\n                this.monitorLoading = false;\n                this.$http.get(this.formatString(this.$store.state.url.spider.getMonitor, {\n                    id: this.spiderInfo.id,\n                })).then(({data: data}) => {\n                    this.monitor.rows = data;\n                    this.monitorLoading = true;\n                }).catch(() => {\n                    this.monitorLoading = true;\n                })\n            },\n            calculatePercent(latest, duration) {\n                if (!latest || !duration || !this.spiderInfo.available || this.spiderInfo.manual) {\n                    return 0\n                }\n                const now = new Date();\n                const latest_run = new Date(latest);\n                const now_duration = now.getTime() - latest_run.getTime();\n                const days = Math.floor(now_duration / (24 * 3600 * 1000));\n                return Math.floor(days / parseInt(duration) * 100);\n            }\n        }\n    }\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Monitor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Monitor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Monitor.vue?vue&type=template&id=62b7d3a0&\"\nimport script from \"./Monitor.vue?vue&type=script&lang=js&\"\nexport * from \"./Monitor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel-title\"},[(_vm.title)?_c('span',{domProps:{\"textContent\":_vm._s(_vm.title)}}):_vm._e(),_c('div',{staticClass:\"fr\"},[_vm._t(\"default\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"panel-title\">\n\t\t<span v-if=\"title\" v-text=\"title\"></span>\n\t\t<div class=\"fr\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tname: 'PanelTitle',\n\t\tprops: {\n\t\t\ttitle: {\n\t\t\t\ttype: String\n\t\t\t}\n\t\t}\n\t}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelTitle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelTitle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PanelTitle.vue?vue&type=template&id=7f54075d&\"\nimport script from \"./PanelTitle.vue?vue&type=script&lang=js&\"\nexport * from \"./PanelTitle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}